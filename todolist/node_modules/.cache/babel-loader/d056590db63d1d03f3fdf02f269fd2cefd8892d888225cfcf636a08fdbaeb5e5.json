{"ast":null,"code":"var _jsxFileName = \"/Users/subin/Desktop/\\u110C\\u1161\\u1107\\u1161\\u1109\\u1173\\u110F\\u1173\\u1105\\u1175\\u11B8\\u1110\\u1173/todolist/todolist/src/components/List.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../css/List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const [lists, setLists] = useState();\n  const [isCheck, setIsCheck] = useState(false);\n  useEffect(() => {\n    getList();\n  }, []);\n\n  // useEffect(() => {\n  //     patchCheck();\n  // }, [isCheck])\n\n  // 작성한 todo list 불러오기\n  const getList = async () => {\n    await axios.get('/api/lists/get').then(res => {\n      console.log(res);\n      setLists(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  // check F/T lists에 업데이트 하기\n  const checkTF = async idx => {\n    var _lists$idx, _lists$idx2;\n    if (((_lists$idx = lists[idx]) === null || _lists$idx === void 0 ? void 0 : _lists$idx.check) === true) {\n      setIsCheck(false);\n    } else if (((_lists$idx2 = lists[idx]) === null || _lists$idx2 === void 0 ? void 0 : _lists$idx2.check) === false) {\n      setIsCheck(true);\n    }\n  };\n\n  // check 상태변경 mongoDB\n  const patchCheck = async idx => {\n    var _lists$idx3;\n    let check = {\n      check: isCheck\n    };\n    await axios.patch(`/api/lists/patch/${(_lists$idx3 = lists[idx]) === null || _lists$idx3 === void 0 ? void 0 : _lists$idx3._id}`, check).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  console.log('lists', lists);\n  console.log('isCheck', isCheck);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"list-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n      children: [/*#__PURE__*/_jsxDEV(\"col\", {\n        width: \"10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n        width: \"90%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"To do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      id: \"listBody\",\n      children: lists === null || lists === void 0 ? void 0 : lists.map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"btn-chk\",\n              defaultChecked: item === null || item === void 0 ? void 0 : item.check,\n              onChange: () => {\n                checkTF(idx);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item === null || item === void 0 ? void 0 : item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uD074\\uB9AD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"gMfQI4q8YgJrmGHACZ0bDja4rDs=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","List","_s","lists","setLists","isCheck","setIsCheck","getList","get","then","res","console","log","data","catch","err","checkTF","idx","_lists$idx","_lists$idx2","check","patchCheck","_lists$idx3","patch","_id","className","children","width","fileName","_jsxFileName","lineNumber","columnNumber","id","map","item","type","defaultChecked","onChange","content","_c","$RefreshReg$"],"sources":["/Users/subin/Desktop/자바스크립트/todolist/todolist/src/components/List.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../css/List.css';\n\nconst List = () => {\n\n    const [lists, setLists] = useState();\n    \n    const [isCheck, setIsCheck] = useState(false);\n\n    useEffect(() => {\n        getList();\n    }, [])\n    \n    // useEffect(() => {\n    //     patchCheck();\n    // }, [isCheck])\n\n    // 작성한 todo list 불러오기\n    const getList = async() => {\n        await axios.get('/api/lists/get')\n        .then((res) => {\n            console.log(res)\n            setLists(res.data)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    // check F/T lists에 업데이트 하기\n    const checkTF = async (idx) => {\n\n        if (lists[idx]?.check === true){\n            setIsCheck(false);\n        }\n        else if (lists[idx]?.check === false){\n            setIsCheck(true);\n        }\n    };\n\n    // check 상태변경 mongoDB\n    const patchCheck = async (idx) => {\n        let check = { check: isCheck }\n\n        await axios.patch(`/api/lists/patch/${lists[idx]?._id}`, check)\n            .then((res) => {\n                console.log(res)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    console.log('lists', lists);\n    console.log('isCheck', isCheck);\n\n    return (\n        <table className=\"list-table\">\n            {/* <colgroup> : table의 컬럼(td태그)에 적용할 스타일 width, background를 미리 적용 가능한 태그 */}\n            <colgroup>\n                <col width=\"10%\" />\n                <col width=\"90%\" />\n            </colgroup>\n\n            {/* <thead> : HTML 테이블에서 헤더 콘텐츠(header content)들을 하나의 그룹으로 묶을 때 사용\n                각 영역(header, body, footer)을 명시하기 위해 <tbody>, <tfoot> 요소와 함께 사용 */}\n            <thead>\n                <tr>\n                    <th>check</th>\n                    <th>To do List</th>\n                </tr>\n            </thead>\n            <tbody id=\"listBody\">\n                {lists?.map((item,idx)=>{\n                    return(\n                        <tr key={idx}>\n                            <td>\n                                <input type=\"checkbox\" className=\"btn-chk\" defaultChecked={item?.check} onChange={() => { checkTF(idx)}}/>\n                            </td>\n                            <td>{item?.content}</td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n            <button>클릭</button>\n        </table>\n    )\n}\n\nexport default List\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}