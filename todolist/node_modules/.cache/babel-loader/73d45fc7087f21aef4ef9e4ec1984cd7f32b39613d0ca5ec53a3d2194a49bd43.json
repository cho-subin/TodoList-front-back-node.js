{"ast":null,"code":"var _jsxFileName = \"/Users/subin/Desktop/\\u110C\\u1161\\u1107\\u1161\\u1109\\u1173\\u110F\\u1173\\u1105\\u1175\\u11B8\\u1110\\u1173/todolist/todolist/src/components/List.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../css/List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = () => {\n  _s();\n  const [lists, setLists] = useState([{\n    text: 'HTML + CSS 공부하기',\n    check: true\n  }, {\n    text: 'JavaScript 공부하기',\n    check: false\n  }, {\n    text: '헬스 하기',\n    check: true\n  }]);\n  useEffect(() => {\n    getList();\n  }, []);\n  const getList = async () => {\n    await axios.get('/api/lists/get').then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const checkTF = idx => {\n    let copyLists = [...lists];\n    if (copyLists[idx].check === true) {\n      copyLists[idx].check = false;\n    } else if (copyLists[idx].check === false) {\n      copyLists[idx].check = true;\n    }\n    setLists(copyLists);\n  };\n  console.log('lists', lists);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"list-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n      children: [/*#__PURE__*/_jsxDEV(\"col\", {\n        width: \"10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n        width: \"90%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"To do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      id: \"listBody\",\n      children: lists.map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"btn-chk\",\n              defaultChecked: item.check,\n              onChange: () => {\n                checkTF(idx);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(List, \"AXjdcTXft2Ru+TUQCE5WmtN7sdo=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","List","_s","lists","setLists","text","check","getList","get","then","res","console","log","catch","err","checkTF","idx","copyLists","className","children","width","fileName","_jsxFileName","lineNumber","columnNumber","id","map","item","type","defaultChecked","onChange","_c","$RefreshReg$"],"sources":["/Users/subin/Desktop/자바스크립트/todolist/todolist/src/components/List.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../css/List.css';\n\nconst List = () => {\n\n    const [lists, setLists] = useState([\n        { text : 'HTML + CSS 공부하기', check : true },\n        { text: 'JavaScript 공부하기', check: false },\n        { text: '헬스 하기', check: true },\n    ]);\n\n    useEffect(() => {\n        getList();\n    }, [])\n\n    const getList = async() => { await axios.get('/api/lists/get')\n        .then((res) => {\n            console.log(res)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    }\n\n    const checkTF = (idx) => {\n        \n        let copyLists = [...lists];\n\n        if (copyLists[idx].check === true){\n            copyLists[idx].check = false;\n        }\n        else if (copyLists[idx].check === false){\n            copyLists[idx].check = true;\n        }\n        \n        setLists(copyLists);\n    };\n\n    console.log('lists', lists);\n\n    return (\n        <table className=\"list-table\">\n            {/* <colgroup> : table의 컬럼(td태그)에 적용할 스타일 width, background를 미리 적용 가능한 태그 */}\n            <colgroup>\n                <col width=\"10%\" />\n                <col width=\"90%\" />\n            </colgroup>\n\n            {/* <thead> : HTML 테이블에서 헤더 콘텐츠(header content)들을 하나의 그룹으로 묶을 때 사용\n                각 영역(header, body, footer)을 명시하기 위해 <tbody>, <tfoot> 요소와 함께 사용 */}\n            <thead>\n                <tr>\n                    <th>check</th>\n                    <th>To do List</th>\n                </tr>\n            </thead>\n            <tbody id=\"listBody\">\n                {lists.map((item,idx)=>{\n                    return(\n                        <tr key={idx}>\n                            <td>\n                                <input type=\"checkbox\" className=\"btn-chk\" defaultChecked={item.check} onChange={() => { checkTF(idx)}}/>\n                            </td>\n                            <td>{item.text}</td>\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nexport default List\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}