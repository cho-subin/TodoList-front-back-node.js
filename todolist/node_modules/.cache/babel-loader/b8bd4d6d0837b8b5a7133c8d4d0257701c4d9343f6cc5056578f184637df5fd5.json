{"ast":null,"code":"var _jsxFileName = \"/Users/subin/Desktop/\\u110C\\u1161\\u1107\\u1161\\u1109\\u1173\\u110F\\u1173\\u1105\\u1175\\u11B8\\u1110\\u1173/todolist/todolist/src/page/Main.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Buttons from '../components/Buttons';\nimport Input from '../components/Input';\nimport List from '../components/List';\nimport '../css/Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [isListUpdated, setListUpdated] = useState(false);\n  const [isListGet, setListGet] = useState(false);\n  const [lists, setLists] = useState();\n  const handleListUpdated = () => {\n    setListUpdated(true);\n  };\n  useEffect(() => {\n    if (isListUpdated) {\n      // 리스트가 업데이트되었으므로 필요한 작업 수행\n      // 예: 다시 데이터를 가져온다.\n      setListUpdated(false); // 업데이트 후 상태 초기화\n    }\n  }, [isListUpdated]);\n  const handleGetList = () => {\n    setListGet(true);\n  };\n\n  // 작성한 todo list 불러오기\n  const getList = async () => {\n    await axios.get('/api/lists/get').then(res => {\n      console.log(res);\n      setLists(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  useEffect(() => {\n    if (isListUpdated) {\n      // 리스트가 업데이트되었으므로 필요한 작업 수행\n      // 예: 다시 데이터를 가져온다.\n      setListUpdated(false); // 업데이트 후 상태 초기화\n    }\n  }, [isListUpdated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onListUpdated: handleListUpdated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      onListUpdated: handleListUpdated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"5BTEV2eDYipfGkdLD0y6mnP6THA=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["axios","React","useEffect","useState","Buttons","Input","List","jsxDEV","_jsxDEV","Main","_s","isListUpdated","setListUpdated","isListGet","setListGet","lists","setLists","handleListUpdated","handleGetList","getList","get","then","res","console","log","data","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onListUpdated","_c","$RefreshReg$"],"sources":["/Users/subin/Desktop/자바스크립트/todolist/todolist/src/page/Main.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport Buttons from '../components/Buttons';\nimport Input from '../components/Input';\nimport List from '../components/List';\nimport '../css/Main.css';\n\nconst Main = () => {\n\n    const [isListUpdated, setListUpdated] = useState(false);\n    const [isListGet, setListGet] = useState(false);\n    const [lists, setLists] = useState();\n\n    const handleListUpdated = () => {\n        setListUpdated(true);\n    }\n\n    useEffect(() => {\n        if (isListUpdated) {\n            // 리스트가 업데이트되었으므로 필요한 작업 수행\n            // 예: 다시 데이터를 가져온다.\n            setListUpdated(false); // 업데이트 후 상태 초기화\n        }\n    }, [isListUpdated]);\n\n    const handleGetList = () => {\n        setListGet(true);\n    }\n\n    // 작성한 todo list 불러오기\n    const getList = async () => {\n        await axios.get('/api/lists/get')\n            .then((res) => {\n                console.log(res)\n                setLists(res.data)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    useEffect(() => {\n        if (isListUpdated) {\n            // 리스트가 업데이트되었으므로 필요한 작업 수행\n            // 예: 다시 데이터를 가져온다.\n            setListUpdated(false); // 업데이트 후 상태 초기화\n        }\n    }, [isListUpdated]);\n    \n    return (\n        <div className='main'>\n            <h1>To Do List</h1>\n            <Input onListUpdated={handleListUpdated} />\n            <List onListUpdated={handleListUpdated} />\n            <Buttons />\n        </div>\n    )\n}\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,aAAa,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACU,SAAS,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAEpC,MAAMc,iBAAiB,GAAGA,CAAA,KAAM;IAC5BL,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZ,IAAIS,aAAa,EAAE;MACf;MACA;MACAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3B;EACJ,CAAC,EAAE,CAACD,aAAa,CAAC,CAAC;EAEnB,MAAMO,aAAa,GAAGA,CAAA,KAAM;IACxBJ,UAAU,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMK,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMnB,KAAK,CAACoB,GAAG,CAAC,gBAAgB,CAAC,CAC5BC,IAAI,CAAEC,GAAG,IAAK;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBN,QAAQ,CAACM,GAAG,CAACG,IAAI,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACZJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IACpB,CAAC,CAAC;EACV,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZ,IAAIS,aAAa,EAAE;MACf;MACA;MACAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3B;EACJ,CAAC,EAAE,CAACD,aAAa,CAAC,CAAC;EAEnB,oBACIH,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBrB,OAAA;MAAAqB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBzB,OAAA,CAACH,KAAK;MAAC6B,aAAa,EAAEjB;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CzB,OAAA,CAACF,IAAI;MAAC4B,aAAa,EAAEjB;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CzB,OAAA,CAACJ,OAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd,CAAC;AAAAvB,EAAA,CAlDKD,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAoDV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}